import tkinter as tk
from tkinter import filedialog
import random
import time


"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞"


def generate_random_number(n):
    n = n - 1
    return random.randint(1, n)


"–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ù–û–î –¥–≤—É—Ö —á–∏—Å–µ–ª"


def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a


"–§—É–Ω–∫—Ü–∏—è F (–∏–∑ –∞–ª–≥–æ—Ä–∏—Ç–º–∞)"


def f(x):
    return x**2 + 1


"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É —Ç–µ—Å—Ç–æ–º –†–∞–±–∏–Ω–∞-–ú–∏–ª–ª–µ—Ä–∞ (6 –ª—Ä)"


def check_miller_rabin(n, k=40):
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    r, s = 0, n - 1
    while s % 2 == 0:
        r += 1
        s //= 2
    for _ in range(k):
        a = random.randrange(1, n - 1)
        x = pow(a, s, n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(r - 1):
            x = pow(x, 2 * s, n)
            if x == n - 1:
                break
        else:
            return False
    return True


"–ü–æ–ª–Ω–∞—è —Ñ–∞–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"


def factorization(n):
    prime_factors = []

    def factorize_last_number(num, factors_list):
        if num < 2:
            return
        for i in range(2, int(num ** 0.5) + 1):
            while num % i == 0:
                factors_list.append(i)
                num //= i
        if num > 1:
            factors_list.append(num)

    while n % 2 == 0:
        prime_factors.append(2)
        n //= 2

    x = generate_random_number(n)
    y = x
    x_i = x
    k = 2
    for i in range(2, n + 1):
        x = x_i
        x_i = f(x) % n
        d = gcd(abs(y - x_i), n)
        if 1 < d < n:
            if check_miller_rabin(d):
                prime_factors.append(d)
                n //= d
                continue
        else:
            if i < k:
                continue
            if i == k:
                y = x_i
                k *= 2
                continue

    if n > 1:
        m = n

    if prime_factors:
        factorize_last_number(m, prime_factors)

    return prime_factors


"–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ n"


def main(n):
    start_time = time.time()
    file_path_output = "output_data.txt"

    try:
        if n < 1:
            result = "–ù–µ–≤–µ—Ä–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
        elif n == 1:
            result = "–ß–∏—Å–ª–æ n = 1 –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã–º"
        elif check_miller_rabin(n):
            result = "n - –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ"
        else:
            result = "n - —Å–æ—Å—Ç–∞–≤–Ω–æ–µ,\n—Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏:\n"
            result += str(factorization(n))

        with open(file_path_output, "w") as output_file:
            output_file.write(result)
            end_time = time.time()
            execution_time = end_time - start_time
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª '{file_path_output}' üìù")
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time:.5f} —Å–µ–∫.")

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –æ–∫–Ω–æ tkinter
            result += f"\n\n–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time:.5f} —Å–µ–∫."
            label_result.config(text=result)

    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e} üí•")


"–ß—Ç–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö"


def open_file_dialog():
    file_path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    if file_path:
        try:
            with open(file_path, "r") as file:
                try:
                    n = int(file.readline().strip())
                    main(n)
                except ValueError:
                    label_result.config(text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        except FileNotFoundError:
            print(f"–§–∞–π–ª '{file_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e} üí•")


"–ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ tkinter"


root = tk.Tk()
root.title("–§–∞–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–∏—Å–ª–∞ n")
root.geometry("300x130")

button_open = tk.Button(root, text="–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª", command=open_file_dialog)
button_open.pack()

label_result = tk.Label(root, text="")
label_result.pack()

root.mainloop()